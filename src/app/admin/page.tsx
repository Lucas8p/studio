
"use client";

import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import * as z from 'zod';
import { useApp } from '@/hooks/use-app';
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { useToast } from "@/hooks/use-toast";
import { Textarea } from '@/components/ui/textarea';
import { useState } from 'react';

const formSchema = z.object({
  title: z.string().min(10, {
    message: "Title must be at least 10 characters.",
  }).max(100, {
    message: "Title must not exceed 100 characters.",
  }),
  option1: z.string().min(2, {
    message: "Option 1 must be at least 2 characters.",
  }).max(50, {
    message: "Option 1 must not exceed 50 characters.",
  }),
  option2: z.string().min(2, {
    message: "Option 2 must be at least 2 characters.",
  }).max(50, {
    message: "Option 2 must not exceed 50 characters.",
  }),
});

export default function AdminPage() {
  const { addScenario } = useApp();
  const { toast } = useToast();
  const [isSubmitting, setIsSubmitting] = useState(false);

  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      title: "",
      option1: "",
      option2: "",
    },
  });

  async function onSubmit(values: z.infer<typeof formSchema>) {
    setIsSubmitting(true);
    await addScenario(values);
    toast({
      title: "It is Written!",
      description: "A new scenario has been created and is open for joyful wagers.",
    });
    form.reset();
    setIsSubmitting(false);
  }

  return (
    <div className="max-w-2xl mx-auto">
      <Card>
        <CardHeader>
          <CardTitle className="font-headline text-2xl">Add New Scenario</CardTitle>
          <CardDescription>
            Create a new fun scenario for users to bet on. An amusing description will be generated by AI.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <Form {...form}>
            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
              <FormField
                control={form.control}
                name="title"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Scenario Title</FormLabel>
                    <FormControl>
                      <Textarea placeholder="e.g., Will the choir's new robe colors be a heavenly hit?" {...field} />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <FormField
                  control={form.control}
                  name="option1"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Option 1 (e.g., The 'Yes' case)</FormLabel>
                      <FormControl>
                        <Input placeholder="Yes, they're glorious!" {...field} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />
                <FormField
                  control={form.control}
                  name="option2"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Option 2 (e.g., The 'No' case)</FormLabel>
                      <FormControl>
                        <Input placeholder="No, too flashy!" {...field} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />
              </div>
              <Button type="submit" disabled={isSubmitting}>
                {isSubmitting ? 'Adding...' : 'Add Scenario with AI'}
              </Button>
            </form>
          </Form>
        </CardContent>
      </Card>
    </div>
  );
}
